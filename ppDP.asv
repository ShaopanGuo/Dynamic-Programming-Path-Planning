function [path cost] = ppDP(rewards,I)

if state == 1
    path = [1];
    cost = 0;
else
    tok = find(I(k,:)==1);    % Find paths ending with intersection k
    num_tok = size(tok,2);    % number of paths ending with intersection k
    temp_reward = reward(tok);
    temp_cost = zeros(1, num_tok);
    temp_pstate = zeros(1, num_tok);
    for i = 1:num_tok
        temp_pstate(i) = find(I(:,tok(i))==-1);
        [~, cc] = ppDP(rewards,I,temp_pstate(i)); 
        temp_cost(i) = cc + temp_reward(i);
    end
    [MM, temp] = min(temp_cost);
    path = 
end

numInter = size(I,1);    % The number of states
numEdge = size(I,2);

k = numInter;        % k ia the current state
path = k;
cost = zeros(1,numInter)*nan;

while k ~= 1
    
    
    
end
end

